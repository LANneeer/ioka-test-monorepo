map $http_x_request_id $req_id {
  default $http_x_request_id;
  ""      $request_id;
}
map $http_referer $openapi_target {
    ~*/api/users/    http://user-service:8001;
    ~*/api/payments/ http://payment-service:8002;
    default          "";
}

server {
  listen 80;
  server_name _;

  client_max_body_size 25m;
  proxy_read_timeout   300s;
  proxy_connect_timeout 10s;
  proxy_send_timeout    300s;

  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Request-ID      $req_id;

  location /api/users/ {
    rewrite ^/api/users/?(.*)$ /$1 break;
    proxy_pass http://user-service:8001/api/users;
  }

  location /api/payments/ {
    rewrite ^/api/payments/?(.*)$ /$1 break;
    proxy_pass http://payment-service:8002/api/payments;
  }

  location /prometheus/ {
    rewrite ^/prometheus/?(.*)$ /$1 break;
    proxy_pass http://prometheus:9090/;
  }

  location /kibana/ {
    rewrite ^/kibana/?(.*)$ /$1 break;
    proxy_pass http://kibana:5601/;
  }

  location /grafana/ {
    rewrite ^/grafana/?(.*)$ /$1 break;
    proxy_pass http://grafana:3000/;
  }

  location = /openapi.json {
    if ($openapi_target = "") { return 404; }
    proxy_pass $openapi_target/openapi.json;
  }

  location = /docs/oauth2-redirect {
    if ($openapi_target = "") { return 404; }
    proxy_pass $openapi_target/docs/oauth2-redirect;
  }

  location = / {
    return 200 'OK
	- Users API:      /api/users
	- Payments API:   /api/payments
	- Prometheus:     /prometheus
	- Kibana:         /kibana
	- Grafana:        /grafana
	';
    add_header Content-Type text/plain;
  }
}
