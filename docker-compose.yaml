version: "3.9"

volumes:
  postgres_data: {}

services:
  user-service:
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile
    environment:
      APP_NAME: "$APP_NAME"
      DATABASE_URL: "$DATABASE_URL" 
    ports:
      - "8001:8001"
    volumes:
      - ./apps/user-service/src:/app/apps/user-service/src:ro
  
  postgres:
    image: postgres:12
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: "$POSTGRES_DB"
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
      POSTGRES_USER: "$POSTGRES_USER"
      PGDATA: "$PGDATA"
    ports:
      - "5432:5432"
    expose:
      - "5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports: ["9200:9200"]
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports: ["5601:5601"]
    depends_on: [elasticsearch]


  prometheus:
    image: prom/prometheus:v2.54.1
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - ./observability/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports: ["9090:9090"]

  grafana:
    image: grafana/grafana:11.1.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports: ["3000:3000"]
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
